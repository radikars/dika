// SPDX-License-Identifier: MIT
pragma solidity 0.8;

contract sistem{

    receive() external payable {}
    fallback() external payable {}

    address public perusahaan;
    constructor(){
        perusahaan = msg.sender;
    }

    modifier hanyaPerusahaan(){
        require(msg.sender==perusahaan, "anda tidak punya wewenang");
        _;
    }

    struct karyawan{
        string nama;
        string email;
        uint nohp;
        uint tanggalmasuk;
        uint gaji;
    }

    karyawan Data;

    mapping(address => karyawan) public datakaryawan;

    function isiData(address _karyawanAdd, string memory _nama, string memory _email, uint _nohp, uint _tanggalmasuk) public {
        datakaryawan[_karyawanAdd].nama = _nama;
        datakaryawan[_karyawanAdd].email = _email;
        datakaryawan[_karyawanAdd].nohp = _nohp;
        datakaryawan[_karyawanAdd].tanggalmasuk = _tanggalmasuk;
    }

    function gajiKaryawan(address payable _karyawanAdd) public payable {
        if(msg.sender==perusahaan){
            _karyawanAdd.transfer(msg.value); //1 ether 604.800
        }
        else{
            revert("Anda Tidak Punya Akses");
        }
    }

}

